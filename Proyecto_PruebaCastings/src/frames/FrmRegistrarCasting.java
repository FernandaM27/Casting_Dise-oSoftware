/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import controlescasting.FNegocios;
import controlescasting.Fabrica;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import objetosnegocio.Agente;
import objetosnegocio.Casting;
import objetosnegocio.Cliente;
import objetosnegocio.Fase;
import objetosnegocio.Online;
import objetosnegocio.Presencial;

/**
 *
 * @author miran
 */
public class FrmRegistrarCasting extends javax.swing.JFrame implements FrameBase {

    private static FrmRegistrarCasting frmRegistrarCasting;
    private List<Agente> listaAgentes;
    private List<Cliente> listaClientes;
    private List<Fase> listaFases;
    private Casting casting;
    private FNegocios negocios = Fabrica.fabricaN();

    private FrmRegistrarCasting() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.cboxTipo.setSelectedIndex(0);
    }
    public void setListas(List<Cliente>cliente, List<Agente>Agente){
        this.listaAgentes=Agente;
        this.listaClientes=cliente;
        this.mostrar();
    }
    
    public static FrmRegistrarCasting getFrmRegistrarCasting() {
        if (FrmRegistrarCasting.frmRegistrarCasting != null) {
            return frmRegistrarCasting;
        } else {
            FrmRegistrarCasting.frmRegistrarCasting = new FrmRegistrarCasting();
            return FrmRegistrarCasting.frmRegistrarCasting;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblTittle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        dpFecha = new com.github.lgooddatepicker.components.DatePicker();
        lblFecha = new javax.swing.JLabel();
        btnEliminarFase = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFases = new javax.swing.JTable();
        btnRegistrarF = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCoste = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dpFechaC = new com.github.lgooddatepicker.components.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboxClientes = new javax.swing.JComboBox<>();
        cboxAgentes = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cboxTipo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtNumPersonas = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 76, 125), 2));

        jPanel1.setBackground(new java.awt.Color(41, 76, 125));

        lblTittle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bocina64gris.png"))); // NOI18N
        lblTittle.setText(" Registro Casting");
        lblTittle.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        lblTittle.setForeground(new java.awt.Color(240, 240, 240));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTittle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTittle)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 76, 125)), "Informaci√≥n de la Fase", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT Condensed", 1, 24), new java.awt.Color(41, 76, 125))); // NOI18N

        lblFecha.setText("Fecha");
        lblFecha.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(41, 76, 125));

        btnEliminarFase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar32azul.png"))); // NOI18N
        btnEliminarFase.setText("Eliminar");
        btnEliminarFase.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); // NOI18N
        btnEliminarFase.setForeground(new java.awt.Color(41, 76, 125));
        btnEliminarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFaseActionPerformed(evt);
            }
        });

        tblFases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Fecha de inicio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblFases);

        btnRegistrarF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/registrar32azul.png"))); // NOI18N
        btnRegistrarF.setText("agregar");
        btnRegistrarF.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); // NOI18N
        btnRegistrarF.setForeground(new java.awt.Color(41, 76, 125));
        btnRegistrarF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(lblFecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegistrarF)
                    .addComponent(btnEliminarFase))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFecha))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnRegistrarF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarFase)))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 76, 125)), "Informaci√≥n del Casting", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT Condensed", 1, 24), new java.awt.Color(41, 76, 125))); // NOI18N

        jLabel5.setText("Coste");
        jLabel5.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(41, 76, 125));

        txtCoste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCosteKeyTyped(evt);
            }
        });

        jLabel2.setText("Tipo");
        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 76, 125));

        jLabel3.setText("Fecha contrataci√≥n");
        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 76, 125));

        jLabel4.setText("Descripci√≥n");
        jLabel4.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(41, 76, 125));

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        jLabel6.setText("Cliente");
        jLabel6.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(41, 76, 125));

        jLabel7.setText("Numero de personas");
        jLabel7.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(41, 76, 125));

        cboxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxClientesActionPerformed(evt);
            }
        });

        jLabel8.setText("Nombre");
        jLabel8.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(41, 76, 125));

        cboxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Presencial", "Online" }));
        cboxTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboxTipoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cboxTipoMousePressed(evt);
            }
        });
        cboxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTipoActionPerformed(evt);
            }
        });

        jLabel9.setText("Agente");
        jLabel9.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(41, 76, 125));

        txtNumPersonas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumPersonasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumPersonasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addGap(89, 89, 89)
                                    .addComponent(jLabel9))))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre)
                    .addComponent(jScrollPane1)
                    .addComponent(txtCoste)
                    .addComponent(dpFechaC, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(cboxClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboxAgentes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboxTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNumPersonas))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCoste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dpFechaC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cboxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxAgentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/registrar32azul.png"))); // NOI18N
        jButton6.setText("Registar");
        jButton6.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(41, 76, 125));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelar32azul.png"))); // NOI18N
        jButton4.setText("Cancelar");
        jButton4.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(41, 76, 125));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton6)
                        .addGap(47, 47, 47)
                        .addComponent(jButton4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton4))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.limpiarCampos();
        this.casting=null;
        FrmMenuCasting.getFrmMenuCasting().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void cboxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxClientesActionPerformed

    private void btnEliminarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFaseActionPerformed
        int i = JOptionPane.showConfirmDialog(this, "Desea eliminar fase?", "Alerta!", JOptionPane.YES_NO_OPTION);
        if(i==JOptionPane.YES_OPTION){
            this.eliminarFase();
        }
    }//GEN-LAST:event_btnEliminarFaseActionPerformed

    private void btnRegistrarFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarFActionPerformed
        this.agregarFase();
    }//GEN-LAST:event_btnRegistrarFActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.guardarCasting();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cboxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTipoActionPerformed
        if (this.casting == null) {
            this.tipos();
        }
    }//GEN-LAST:event_cboxTipoActionPerformed

    private void cboxTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboxTipoMouseClicked
        if (this.casting == null) {
            this.tipos();
        }
    }//GEN-LAST:event_cboxTipoMouseClicked

    private void cboxTipoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboxTipoMousePressed
        if (this.casting == null) {
            this.tipos();
        }
    }//GEN-LAST:event_cboxTipoMousePressed

    private void txtCosteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCosteKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCosteKeyTyped

    private void txtNumPersonasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumPersonasKeyPressed

    }//GEN-LAST:event_txtNumPersonasKeyPressed

    private void txtNumPersonasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumPersonasKeyTyped
        char c1 = evt.getKeyChar();
        if (c1 < '0' || c1 > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumPersonasKeyTyped

    private void tipos() {
        if (this.cboxTipo.getSelectedIndex() == 1) {
            this.casting = new Presencial();
        } else if (this.cboxTipo.getSelectedIndex() == 2) {
            this.casting = new Online();
        }
    }

    private void guardarCasting() {
        if (!this.camposVacios()) {
            //validaci√≥n de coste
            if(this.cboxTipo.getSelectedIndex()==1){
                if(cboxAgentes.getSelectedIndex()!=0 && !txtNumPersonas.getText().isEmpty()){
                   if(this.casting.verificarCantidadFases()){
                       casting.setNombre(this.txtNombre.getText());
                       casting.setDescripcion(this.txtDescripcion.getText());
                       casting.setCoste(Float.parseFloat(this.txtCoste.getText()));
                       LocalDate local= this.dpFechaC.getDate();
                       Date fecha = Date.from(local.atStartOfDay(ZoneId.systemDefault()).toInstant());
                       casting.setFechaContratacion(fecha);
                       casting.setCliente((Cliente)cboxClientes.getSelectedItem());
                       ((Presencial)(this.casting)).setAgente((Agente)cboxAgentes.getSelectedItem());
                       ((Presencial)(this.casting)).setNumeroPersonas(Integer.parseInt(txtNumPersonas.getText()));
                       try {
                           if (this.negocios.guardarCasting(casting)) {
                               this.mostrarMsj("Casting guardado exitosamente", 0);
                               this.limpiarCampos();
                               this.casting = null;
                           } else {
                               this.mostrarMsj("Ya existe un casting por ese nombre", 1);
                           }
                       }catch(Exception e){
                           this.mostrarMsj(e.getMessage(), 1);
                       }                       
                   }else{
                       System.out.println(this.casting.getFases().size());
                       this.mostrarMsj("El numero minimo de fases deben de ser 2", 2);
                   }
                }else{
                    this.mostrarMsj("Para obligatorios los campos Agente y numero de personas para presencial", 2);
                }
            }else{
                if (this.casting.verificarCantidadFases()) {
                    casting.setNombre(this.txtNombre.getText());
                    casting.setDescripcion(this.txtDescripcion.getText());
                    casting.setCoste(Float.parseFloat(this.txtCoste.getText()));
                    LocalDate local = this.dpFechaC.getDate();
                    Date fecha = Date.from(local.atStartOfDay(ZoneId.systemDefault()).toInstant());
                    casting.setFechaContratacion(fecha);
                    casting.setCliente((Cliente) cboxClientes.getSelectedItem());
                    try {
                           if (this.negocios.guardarCasting(casting)) {
                               this.mostrarMsj("Casting guardado exitosamente", 0);
                               this.limpiarCampos();
                               this.casting = null;
                           } else {
                               this.mostrarMsj("No se ha podido guardar el casting", 1);
                           }
                       }catch(Exception e){
                           this.mostrarMsj(e.getMessage(), 1);
                       }
                } else {
                       System.out.println(this.casting.getFases().size());
                       this.mostrarMsj("El numero minimo de fases deben de ser 2", 2);
                }
            }
        } else {
            this.mostrarMsj("Los campos deben de estar llenos", 2);
        }
    }

    @Override
    public void mostrar() {
        this.llenarCboxClientes();
        this.llenarCboxAgentes();
    }

    private void llenarCboxClientes() {
        cboxClientes.removeAllItems();
        Cliente seleccioneP = new Cliente();
        seleccioneP.setId(0l);
        seleccioneP.setNombre("Seleccione...");
        cboxClientes.addItem(seleccioneP);
        for (Cliente cliente : listaClientes) {
            cboxClientes.addItem(cliente);
        }
    }

    private void llenarCboxAgentes() {
        cboxAgentes.removeAllItems();
        Agente seleccioneP = new Agente();
        seleccioneP.setId(0l);
        seleccioneP.setNombre("Seleccione...");
        cboxAgentes.addItem(seleccioneP);
        for (Agente agente : listaAgentes) {
            cboxAgentes.addItem(agente);
        }
    }

    private void agregarFase() {
        if (!this.dpFecha.toString().isEmpty()) {
            LocalDate local = dpFecha.getDate();
            Date fecha = Date.from(local.atStartOfDay(ZoneId.systemDefault()).toInstant());
            Fase fase = new Fase(fecha);
            fase.setCasting(casting);
            if (!this.casting.verificarFase(fase.getFechaInicio())) {
                this.casting.agregarFase(fase);
                this.mostrarMsj("Fase agregada", 0);
                this.mostrarFases();
            } else {
                this.mostrarMsj("Ya existe una fase en esa fecha", 1);
            }
        } else {
            this.mostrarMsj("La fecha no puede estar vac√≠a", 1);
        }
    }

    private void eliminarFase() {
        int fila = this.tblFases.getSelectedRow();
        if (fila == -1) {
            this.mostrarMsj("Seleccione una fase", 3);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tblFases.getModel();
            Date fecha = (Date) modelo.getValueAt(fila, 0);
            if (this.casting.verificarFase(fecha)) {
                this.casting.eliminarFase(new Fase(fecha));
                this.mostrarMsj("Fase eliminada exitosamente", 0);
                this.mostrarFases();
            } else {
                this.mostrarMsj("No se ha podido eliminar la fase", 1);
            }
        }
    }

    private void mostrarFases() {
        DefaultTableModel modelo = (DefaultTableModel) tblFases.getModel();
        modelo.setRowCount(0);
        List<Fase> listaFases = this.casting.getFases();
        for (Fase fase : listaFases) {
            modelo.addRow(fase.toArray());
        }
    }

    private boolean camposVacios() {
        if (this.txtNombre.getText().isEmpty() || this.cboxTipo.getSelectedIndex() == 0 || this.txtDescripcion.getText().isEmpty()
                || this.txtCoste.getText().isEmpty() || this.dpFechaC.getText().isEmpty() || this.cboxClientes.getSelectedIndex() == 0) {
            return true;
        } else {
            return false;
        }
    }

    private void limpiarCampos() {
        this.txtNombre.setText("");
        this.txtCoste.setText("");
        this.txtNumPersonas.setText("");
        this.txtDescripcion.setText("");
        this.cboxTipo.setSelectedIndex(0);
        this.cboxClientes.setSelectedIndex(0);
        this.cboxAgentes.setSelectedIndex(0);
        this.dpFecha.setDate(null);
        this.dpFechaC.setDate(null);
        for (int i = 0; i < this.tblFases.getRowCount(); i++) {
            for (int j = 0; j < this.tblFases.getColumnCount(); j++) {
                this.tblFases.setValueAt("", i, j);
            }
        }
    }

    @Override
    public void mostrarMsj(String mensaje, int tipo) {
        if (tipo == 0) {
            JOptionPane.showMessageDialog(this, mensaje,
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        } else if (tipo == 1) {
            JOptionPane.showMessageDialog(this, mensaje,
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, mensaje,
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarFase;
    private javax.swing.JButton btnRegistrarF;
    private javax.swing.JComboBox<Agente> cboxAgentes;
    private javax.swing.JComboBox<Cliente> cboxClientes;
    private javax.swing.JComboBox<String> cboxTipo;
    private com.github.lgooddatepicker.components.DatePicker dpFecha;
    private com.github.lgooddatepicker.components.DatePicker dpFechaC;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblTittle;
    private javax.swing.JTable tblFases;
    private javax.swing.JTextField txtCoste;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumPersonas;
    // End of variables declaration//GEN-END:variables

}
